from aiogram import Router, F
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove

from app.db.session import Session
from app.db.models import Feedback
from app.config import ADMIN_IDS as ADMINS
from app.keyboards import get_support_menu

router = Router()

class QuestionStates(StatesGroup):
    waiting_question = State()

@router.message(F.text == "‚ùì –í–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏")
async def start_question(message: Message, state: FSMContext):
    await message.answer(
        "üí¨ –ó–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞:",
        reply_markup=ReplyKeyboardRemove()
    )
    await state.set_state(QuestionStates.waiting_question)

@router.message(QuestionStates.waiting_question)
async def process_question(message: Message, state: FSMContext):
    session = Session()
    fb = Feedback(
        user_id=message.from_user.id,
        text=message.text,
        include_profile=False,  # –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
        request_type='question',
        can_publish=False,  # –ù–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
        is_published=False
    )
    session.add(fb)
    session.commit()

    await message.answer(
        "üíõ –°–ø–∞—Å–∏–±–æ! –¢–≤–æ–π –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏. –û—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
        reply_markup=get_support_menu()
    )

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤
    for admin_id in ADMINS:
        markup = InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text="üìù –û—Ç–≤–µ—Ç–∏—Ç—å", callback_data=f"answer_question_{fb.id}")]]
        )

        await message.bot.send_message(
            chat_id=admin_id,
            text=f"‚ùì –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏:\n\n{fb.text}",
            reply_markup=markup
        )

    await state.clear()